<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.49.3 (20211023.0002)
 -->
<!-- Pages: 1 -->
<svg width="383pt" height="350pt"
 viewBox="0.00 0.00 382.50 350.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 346)">
<g id="a_graph0"><a xlink:title="PEGParser class hierarchy">
<polygon fill="white" stroke="transparent" points="-4,4 -4,-346 378.5,-346 378.5,4 -4,4"/>
</a>
</g>
<!-- PEGParser -->
<g id="node1" class="node">
<title>PEGParser</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class PEGParser:&#10;Packrat parser for Parsing Expression Grammars (PEGs).">
<polygon fill="none" stroke="black" points="0,-61 0,-125 101,-125 101,-61 0,-61"/>
<text text-anchor="start" x="18" y="-110.8" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">PEGParser</text>
<polyline fill="none" stroke="black" points="0,-102 101,-102 "/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="PEGParser">
<g id="a_node1_1"><a xlink:href="#" xlink:title="parse_prefix(self, text):&#10;Return pair (cursor, forest) for longest prefix of text.&#10;To be defined in subclasses.">
<text text-anchor="start" x="8.5" y="-90.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse_prefix()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="unify_rule(self, rule, text, at)">
<text text-anchor="start" x="8.5" y="-78.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">unify_rule()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="unify_key(self, key, text, at=0)">
<text text-anchor="start" x="8.5" y="-67.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">unify_key()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Parser -->
<g id="node2" class="node">
<title>Parser</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class Parser:&#10;Base class for parsing.">
<polygon fill="none" stroke="black" points="64,-222.5 64,-341.5 165,-341.5 165,-222.5 64,-222.5"/>
<text text-anchor="start" x="94.5" y="-327.3" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">Parser</text>
<polyline fill="none" stroke="black" points="64,-318.5 165,-318.5 "/>
<g id="a_node2_4"><a xlink:href="#" xlink:title="Parser">
<g id="a_node2_5"><a xlink:href="#" xlink:title="__init__(self, grammar, **kwargs):&#10;Constructor.&#10;`grammar` is the grammar to be used for parsing.&#10;Keyword arguments:&#10;`start_symbol` is the start symbol (default: &#39;&lt;start&gt;&#39;).&#10;`log` enables logging (default: False).&#10;`coalesce` defines if tokens should be coalesced (default: True).&#10;`tokens`, if set, is a set of tokens to be used.">
<text text-anchor="start" x="72.5" y="-307.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node2_6"><a xlink:href="#" xlink:title="grammar(self) &#45;&gt; Grammar:&#10;Return the grammar of this parser.">
<text text-anchor="start" x="72.5" y="-296.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">grammar()</text>
</a>
</g>
<g id="a_node2_7"><a xlink:href="#" xlink:title="parse(self, text: str) &#45;&gt; Iterable[DerivationTree]:&#10;Parse `text` using the grammar.&#10;Return an iterable of parse trees.">
<text text-anchor="start" x="72.5" y="-285.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">parse()</text>
</a>
</g>
<g id="a_node2_8"><a xlink:href="#" xlink:title="start_symbol(self) &#45;&gt; str:&#10;Return the start symbol of this parser.">
<text text-anchor="start" x="72.5" y="-274.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">start_symbol()</text>
</a>
</g>
<g id="a_node2_9"><a xlink:href="#" xlink:title="coalesce(self, children: List[DerivationTree]) &#45;&gt; List[DerivationTree]">
<text text-anchor="start" x="72.5" y="-262.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">coalesce()</text>
</a>
</g>
<g id="a_node2_10"><a xlink:href="#" xlink:title="parse_on(self, text: str, start_symbol: str) &#45;&gt; Generator">
<text text-anchor="start" x="72.5" y="-251.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">parse_on()</text>
</a>
</g>
<g id="a_node2_11"><a xlink:href="#" xlink:title="parse_prefix(self, text: str) &#45;&gt; Tuple[int, Iterable[DerivationTree]]:&#10;Return pair (cursor, forest) for longest prefix of text.&#10;To be defined in subclasses.">
<text text-anchor="start" x="72.5" y="-241.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse_prefix()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="#" xlink:title="prune_tree(self, tree)">
<text text-anchor="start" x="72.5" y="-229.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">prune_tree()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- PEGParser&#45;&gt;Parser -->
<g id="edge1" class="edge">
<title>PEGParser&#45;&gt;Parser</title>
<path fill="none" stroke="black" d="M61.21,-125.3C69.37,-149.13 80.9,-182.83 91.15,-212.78"/>
<polygon fill="none" stroke="black" points="87.88,-214.03 94.43,-222.36 94.5,-211.76 87.88,-214.03"/>
</g>
<!-- EarleyParser -->
<g id="node3" class="node">
<title>EarleyParser</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class EarleyParser:&#10;Earley Parser. This parser can parse any context&#45;free grammar.">
<polygon fill="none" stroke="black" points="119,-0.5 119,-185.5 238,-185.5 238,-0.5 119,-0.5"/>
<text text-anchor="start" x="139" y="-171.3" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">EarleyParser</text>
<polyline fill="none" stroke="black" points="119,-162.5 238,-162.5 "/>
<g id="a_node3_13"><a xlink:href="#" xlink:title="EarleyParser">
<g id="a_node3_14"><a xlink:href="#" xlink:title="__init__(self, grammar, **kwargs):&#10;Constructor.&#10;`grammar` is the grammar to be used for parsing.&#10;Keyword arguments:&#10;`start_symbol` is the start symbol (default: &#39;&lt;start&gt;&#39;).&#10;`log` enables logging (default: False).&#10;`coalesce` defines if tokens should be coalesced (default: True).&#10;`tokens`, if set, is a set of tokens to be used.">
<text text-anchor="start" x="127.5" y="-151.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node3_15"><a xlink:href="#" xlink:title="chart_parse(self, words, start)">
<text text-anchor="start" x="127.5" y="-139.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">chart_parse()</text>
</a>
</g>
<g id="a_node3_16"><a xlink:href="#" xlink:title="complete(self, col, state)">
<text text-anchor="start" x="127.5" y="-128.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">complete()</text>
</a>
</g>
<g id="a_node3_17"><a xlink:href="#" xlink:title="earley_complete(self, col, state)">
<text text-anchor="start" x="127.5" y="-117.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">earley_complete()</text>
</a>
</g>
<g id="a_node3_18"><a xlink:href="#" xlink:title="extract_a_tree(self, forest_node)">
<text text-anchor="start" x="127.5" y="-106.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">extract_a_tree()</text>
</a>
</g>
<g id="a_node3_19"><a xlink:href="#" xlink:title="extract_trees(self, forest_node)">
<text text-anchor="start" x="127.5" y="-95.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">extract_trees()</text>
</a>
</g>
<g id="a_node3_20"><a xlink:href="#" xlink:title="fill_chart(self, chart)">
<text text-anchor="start" x="127.5" y="-84.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">fill_chart()</text>
</a>
</g>
<g id="a_node3_21"><a xlink:href="#" xlink:title="forest(self, s, kind, chart)">
<text text-anchor="start" x="127.5" y="-73.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">forest()</text>
</a>
</g>
<g id="a_node3_22"><a xlink:href="#" xlink:title="parse(self, text):&#10;Parse `text` using the grammar.&#10;Return an iterable of parse trees.">
<text text-anchor="start" x="127.5" y="-63.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse()</text>
</a>
</g>
<g id="a_node3_23"><a xlink:href="#" xlink:title="parse_forest(self, chart, state)">
<text text-anchor="start" x="127.5" y="-51.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">parse_forest()</text>
</a>
</g>
<g id="a_node3_24"><a xlink:href="#" xlink:title="parse_paths(self, named_expr, chart, frm, til)">
<text text-anchor="start" x="127.5" y="-40.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">parse_paths()</text>
</a>
</g>
<g id="a_node3_25"><a xlink:href="#" xlink:title="parse_prefix(self, text):&#10;Return pair (cursor, forest) for longest prefix of text.&#10;To be defined in subclasses.">
<text text-anchor="start" x="127.5" y="-30.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse_prefix()</text>
</a>
</g>
<g id="a_node3_26"><a xlink:href="#" xlink:title="predict(self, col, sym, state)">
<text text-anchor="start" x="127.5" y="-18.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">predict()</text>
</a>
</g>
<g id="a_node3_27"><a xlink:href="#" xlink:title="scan(self, col, state, letter)">
<text text-anchor="start" x="127.5" y="-7.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">scan()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- EarleyParser&#45;&gt;Parser -->
<g id="edge2" class="edge">
<title>EarleyParser&#45;&gt;Parser</title>
<path fill="none" stroke="black" d="M147.16,-185.58C144.02,-194.76 140.87,-203.96 137.83,-212.83"/>
<polygon fill="none" stroke="black" points="134.51,-211.71 134.59,-222.31 141.14,-213.98 134.51,-211.71"/>
</g>
<!-- Legend -->
<g id="node4" class="node">
<title>Legend</title>
<text text-anchor="start" x="256.5" y="-110.5" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="10.00" fill="#b03a2e">Legend</text>
<text text-anchor="start" x="256.5" y="-100.5" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="262.5" y="-100.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="256.5" y="-90.5" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="262.5" y="-90.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="256.5" y="-80.5" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="262.5" y="-80.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="256.5" y="-71.3" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
